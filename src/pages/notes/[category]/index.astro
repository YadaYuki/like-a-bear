---
import type { NoteCategoryType, NoteType } from "~/schemas/note";
import { NOTE_CATEGORIES } from "~/consts/categories";
import Layout from "~/components/layouts/Layout.astro";
import CategoryMenu from "~/components/notes/CategoryMenu.astro";
import NoteList from "~/components/notes/NoteList.astro";
import { ExternalNotes } from "~/data/externalNotes";
import { getCollection } from "astro:content";
import { sortNoteListByPubDate } from "~/utils/collection";

export type Props = {
  category: NoteCategoryType;
  noteItems: NoteType[];
};

export async function getStaticPaths() {
  const collections = await getCollection("notes");
  const internalNotes = collections.map((collection) => collection.data);
  const notes = [...internalNotes, ...ExternalNotes];

  return NOTE_CATEGORIES.map((category) => {
    return {
      params: {
        category,
      },
      props: {
        category,
        noteItems: sortNoteListByPubDate(
          notes.filter((note) => note.category === category)
        ),
      },
    };
  });
}
const { category, noteItems } = Astro.props;
---

<Layout page={"notes"}>
  <CategoryMenu activeCategory={category} />
  <NoteList noteItems={noteItems} />
</Layout>
